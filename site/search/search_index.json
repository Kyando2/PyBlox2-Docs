{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"PyBlox2 documentation You can check PyBlox2 github . Blox Here are all the BloxTypes: PyBlox2.RobloxWebClient.BloxClient PyBlox2.General.BloxUser PyBlox2.Groups.BloxGroup PyBlox2.Member.BloxMember PyBlox2.Ranks.BloxRank PyBlox2.Settings.BloxSettings","title":"Home"},{"location":"#pyblox2-documentation","text":"You can check PyBlox2 github .","title":"PyBlox2 documentation"},{"location":"#blox","text":"Here are all the BloxTypes: PyBlox2.RobloxWebClient.BloxClient PyBlox2.General.BloxUser PyBlox2.Groups.BloxGroup PyBlox2.Member.BloxMember PyBlox2.Ranks.BloxRank PyBlox2.Settings.BloxSettings","title":"Blox"},{"location":"bloxclient/","text":"BloxClient PyBlox2.RobloxWebClient.BloxClient Construction There are no required arguments to constructing a BloxClient. You can pass verbose=True to print additional information on the requests. Methods Methods not listed below should never be used BloxClient.connect(ROBLOSECURITY, callback) Where callback is your main function and ROBLOSECURITY is your bot's ROBLOSECURITY cookie. Puts the BloxClient in a connected state. BloxClient.get_user(username) Where username is the name of the user. returns a BloxUser object. requires BloxClient to be in a connected state BloxClient.get_group(id) Where id is the group's id. returns a BloxGroup object. requires BloxClient to be in a connected state BloxClient.friend_requests() Returns all the friend requests to the bot user. requires BloxClient to be in a connected state Example import PyBlox2.RobloxWebClient.BloxClient ROBLOSECURITY = \"YOUR_ROBLOSECURITY\" client = BloxClient(verbose=True) def main(): # do stuff pass client.connect(ROBLOSECURITY, main)","title":"BloxClient"},{"location":"bloxclient/#bloxclient","text":"","title":"BloxClient"},{"location":"bloxclient/#pyblox2robloxwebclientbloxclient","text":"","title":"PyBlox2.RobloxWebClient.BloxClient"},{"location":"bloxclient/#construction","text":"There are no required arguments to constructing a BloxClient. You can pass verbose=True to print additional information on the requests.","title":"Construction"},{"location":"bloxclient/#methods","text":"Methods not listed below should never be used","title":"Methods"},{"location":"bloxclient/#bloxclientconnectroblosecurity-callback","text":"Where callback is your main function and ROBLOSECURITY is your bot's ROBLOSECURITY cookie. Puts the BloxClient in a connected state.","title":"BloxClient.connect(ROBLOSECURITY, callback)"},{"location":"bloxclient/#bloxclientget_userusername","text":"Where username is the name of the user. returns a BloxUser object. requires BloxClient to be in a connected state","title":"BloxClient.get_user(username)"},{"location":"bloxclient/#bloxclientget_groupid","text":"Where id is the group's id. returns a BloxGroup object. requires BloxClient to be in a connected state","title":"BloxClient.get_group(id)"},{"location":"bloxclient/#bloxclientfriend_requests","text":"Returns all the friend requests to the bot user. requires BloxClient to be in a connected state","title":"BloxClient.friend_requests()"},{"location":"bloxclient/#example","text":"import PyBlox2.RobloxWebClient.BloxClient ROBLOSECURITY = \"YOUR_ROBLOSECURITY\" client = BloxClient(verbose=True) def main(): # do stuff pass client.connect(ROBLOSECURITY, main)","title":"Example"},{"location":"bloxgroup/","text":"BloxGroup PyBlox2.Groups.BloxGroup Construction THIS CLASS SHOULD NEVER BE CONSTRUCTED instead obtain it via BloxClient.get_group() Methods BloxGroup.get_role(role_set_name) Returns a BloxRank object with the selected role_set_name. BloxGroup.get_role(username) Returns a BloxMember object with the selected username. BloxGroup.members() This is will be deprecated in the next update Returns a list of BloxMember objects, all the members of the Group. Attributes BloxUser.join_requests This currently doesn't work Calls __join_requests internally and returns the result. BloxUser.settings Calls __get_setings internally and returns a BloxSettings object with the guild's settings.","title":"BloxGroup"},{"location":"bloxgroup/#bloxgroup","text":"","title":"BloxGroup"},{"location":"bloxgroup/#pyblox2groupsbloxgroup","text":"","title":"PyBlox2.Groups.BloxGroup"},{"location":"bloxgroup/#construction","text":"THIS CLASS SHOULD NEVER BE CONSTRUCTED instead obtain it via BloxClient.get_group()","title":"Construction"},{"location":"bloxgroup/#methods","text":"","title":"Methods"},{"location":"bloxgroup/#bloxgroupget_rolerole_set_name","text":"Returns a BloxRank object with the selected role_set_name.","title":"BloxGroup.get_role(role_set_name)"},{"location":"bloxgroup/#bloxgroupget_roleusername","text":"Returns a BloxMember object with the selected username.","title":"BloxGroup.get_role(username)"},{"location":"bloxgroup/#bloxgroupmembers","text":"This is will be deprecated in the next update Returns a list of BloxMember objects, all the members of the Group.","title":"BloxGroup.members()"},{"location":"bloxgroup/#attributes","text":"","title":"Attributes"},{"location":"bloxgroup/#bloxuserjoin_requests","text":"This currently doesn't work Calls __join_requests internally and returns the result.","title":"BloxUser.join_requests"},{"location":"bloxgroup/#bloxusersettings","text":"Calls __get_setings internally and returns a BloxSettings object with the guild's settings.","title":"BloxUser.settings"},{"location":"bloxmember/","text":"BloxMember PyBlox2.Member.BloxMember This class is a descendant of PyBlox2.General.BloxUser . Construction THIS CLASS SHOULD NEVER BE CONSTRUCTED instead obtain it via BloxGroup.get_member() Methods BloxMember.set_role(role) Where role is a BloxRank. BloxMember.kick() Kicks the user from the group. Attributes BloxMember.group A BloxGroup object.","title":"BloxMember"},{"location":"bloxmember/#bloxmember","text":"","title":"BloxMember"},{"location":"bloxmember/#pyblox2memberbloxmember","text":"This class is a descendant of PyBlox2.General.BloxUser .","title":"PyBlox2.Member.BloxMember"},{"location":"bloxmember/#construction","text":"THIS CLASS SHOULD NEVER BE CONSTRUCTED instead obtain it via BloxGroup.get_member()","title":"Construction"},{"location":"bloxmember/#methods","text":"","title":"Methods"},{"location":"bloxmember/#bloxmemberset_rolerole","text":"Where role is a BloxRank.","title":"BloxMember.set_role(role)"},{"location":"bloxmember/#bloxmemberkick","text":"Kicks the user from the group.","title":"BloxMember.kick()"},{"location":"bloxmember/#attributes","text":"","title":"Attributes"},{"location":"bloxmember/#bloxmembergroup","text":"A BloxGroup object.","title":"BloxMember.group"},{"location":"bloxranks/","text":"BloxRank PyBlox2.Ranks.BloxRank Construction THIS CLASS SHOULD NEVER BE CONSTRUCTED instead obtain it via BloxGroup.get_role() . Attributes BloxRank.name BloxRank.rank BloxRank.member_count BloxRank.description BloxRank.members Calls __members internally and returns it. BloxRank.guild The BloxGuild object attached to the roleSet.","title":"BloxRank"},{"location":"bloxranks/#bloxrank","text":"","title":"BloxRank"},{"location":"bloxranks/#pyblox2ranksbloxrank","text":"","title":"PyBlox2.Ranks.BloxRank"},{"location":"bloxranks/#construction","text":"THIS CLASS SHOULD NEVER BE CONSTRUCTED instead obtain it via BloxGroup.get_role() .","title":"Construction"},{"location":"bloxranks/#attributes","text":"","title":"Attributes"},{"location":"bloxranks/#bloxrankname","text":"","title":"BloxRank.name"},{"location":"bloxranks/#bloxrankrank","text":"","title":"BloxRank.rank"},{"location":"bloxranks/#bloxrankmember_count","text":"","title":"BloxRank.member_count"},{"location":"bloxranks/#bloxrankdescription","text":"","title":"BloxRank.description"},{"location":"bloxranks/#bloxrankmembers","text":"Calls __members internally and returns it.","title":"BloxRank.members"},{"location":"bloxranks/#bloxrankguild","text":"The BloxGuild object attached to the roleSet.","title":"BloxRank.guild"},{"location":"bloxsettings/","text":"BloxSettings PyBlox2.Settings.BloxSettings Construction THIS CLASS SHOULD NEVER BE CONSTRUCTED instead obtain it via the BloxGroup.settings attribute. Attributes BloxSettings.is_approval_required BloxSettings.is_builders_club_required BloxSettings.are_enemies_allowed BloxSettings.are_group_games_visible BloxSettings.are_group_funds_visible","title":"BloxSettings"},{"location":"bloxsettings/#bloxsettings","text":"","title":"BloxSettings"},{"location":"bloxsettings/#pyblox2settingsbloxsettings","text":"","title":"PyBlox2.Settings.BloxSettings"},{"location":"bloxsettings/#construction","text":"THIS CLASS SHOULD NEVER BE CONSTRUCTED instead obtain it via the BloxGroup.settings attribute.","title":"Construction"},{"location":"bloxsettings/#attributes","text":"","title":"Attributes"},{"location":"bloxsettings/#bloxsettingsis_approval_required","text":"","title":"BloxSettings.is_approval_required"},{"location":"bloxsettings/#bloxsettingsis_builders_club_required","text":"","title":"BloxSettings.is_builders_club_required"},{"location":"bloxsettings/#bloxsettingsare_enemies_allowed","text":"","title":"BloxSettings.are_enemies_allowed"},{"location":"bloxsettings/#bloxsettingsare_group_games_visible","text":"","title":"BloxSettings.are_group_games_visible"},{"location":"bloxsettings/#bloxsettingsare_group_funds_visible","text":"","title":"BloxSettings.are_group_funds_visible"},{"location":"bloxuser/","text":"BloxUser PyBlox2.General.BloxUser Construction THIS CLASS SHOULD NEVER BE CONSTRUCTED instead obtain it via BloxClient.get_user() Methods BloxUser.accept_friend_request() Accept the user's friend request if there is one. BloxUser.decline_friend_request() Decline the user's friend request if there is one. BloxUser.request_friendship() Sends the user a friend request. BloxUser.unfriend() Unfriends the user. BloxUser.follow() Follows the user. BloxUser.unfollow() Unfollows the user. BloxUser.block() Blocks the user. BloxUser.unblock() Unblocks the user. Attributes BloxUser.friends Calls __get_friends internally and returns the result. Example import PyBlox2.RobloxWebClient.BloxClient ROBLOSECURITY = \"YOUR_ROBLOSECURITY\" client = BloxClient(verbose=True) def main(): user = client.get_user(\"Roblox\") print(user.friends) client.connect(ROBLOSECURITY, main)","title":"BloxUser"},{"location":"bloxuser/#bloxuser","text":"","title":"BloxUser"},{"location":"bloxuser/#pyblox2generalbloxuser","text":"","title":"PyBlox2.General.BloxUser"},{"location":"bloxuser/#construction","text":"THIS CLASS SHOULD NEVER BE CONSTRUCTED instead obtain it via BloxClient.get_user()","title":"Construction"},{"location":"bloxuser/#methods","text":"","title":"Methods"},{"location":"bloxuser/#bloxuseraccept_friend_request","text":"Accept the user's friend request if there is one.","title":"BloxUser.accept_friend_request()"},{"location":"bloxuser/#bloxuserdecline_friend_request","text":"Decline the user's friend request if there is one.","title":"BloxUser.decline_friend_request()"},{"location":"bloxuser/#bloxuserrequest_friendship","text":"Sends the user a friend request.","title":"BloxUser.request_friendship()"},{"location":"bloxuser/#bloxuserunfriend","text":"Unfriends the user.","title":"BloxUser.unfriend()"},{"location":"bloxuser/#bloxuserfollow","text":"Follows the user.","title":"BloxUser.follow()"},{"location":"bloxuser/#bloxuserunfollow","text":"Unfollows the user.","title":"BloxUser.unfollow()"},{"location":"bloxuser/#bloxuserblock","text":"Blocks the user.","title":"BloxUser.block()"},{"location":"bloxuser/#bloxuserunblock","text":"Unblocks the user.","title":"BloxUser.unblock()"},{"location":"bloxuser/#attributes","text":"","title":"Attributes"},{"location":"bloxuser/#bloxuserfriends","text":"Calls __get_friends internally and returns the result.","title":"BloxUser.friends"},{"location":"bloxuser/#example","text":"import PyBlox2.RobloxWebClient.BloxClient ROBLOSECURITY = \"YOUR_ROBLOSECURITY\" client = BloxClient(verbose=True) def main(): user = client.get_user(\"Roblox\") print(user.friends) client.connect(ROBLOSECURITY, main)","title":"Example"}]}